global:
    0x80005bdc: main
    0x80005760: gameInit
    0x8000b7f4: gameRun
    
    0x8035a550: __vt__22EnemyStrategyDecorator
    0x8035a574: __vt__13EnemyStrategy
    0x804d2e60: __RTTI__13JORReflexible
    0x804d2e68: __RTTI__13EnemyStrategy
    0x804d2e70: __RTTI__22EnemyStrategyDecorator
    
    0x800c2238: __ct__13EnemyStrategyFv
    0x800c2260: __dt__13EnemyStrategyFv
    0x800c22ac: init__13EnemyStrategyFv
    0x800c22b0: update__13EnemyStrategyFv
    0x800c230c: doBehavior__13EnemyStrategyFv
    0x800c2310: doBehaviorInit__13EnemyStrategyFv
    0x800c2314: FUN_800c1314__13EnemyStrategyFv
    0x800c231c: FUN_800c231c__13EnemyStrategyFv
    0x800c2320: setNextState__13EnemyStrategyFs
    0x800c2328: changeState__13EnemyStrategyFv
    
    0x800c2370: __nw__13EnemyStrategyFUlPv
    0x800c2378: __dl__13EnemyStrategyFPv
    
    0x800c237c: __ct__22EnemyStrategyDecoratorFv
    0x8006b02c: __dt__22EnemyStrategyDecoratorFv
    0x800c23bc: trySetTsuriStrategy__22EnemyStrategyDecoratorFP13EnemyStrategy
    0x800c23dc: update__22EnemyStrategyDecoratorFv
    
    #0x804d632c: __RTTI__Q24Koga14CharacterEvent
    0x800ea1b4: __ct__Q24Koga14CharacterEventFRCi
    
    #0x8034b8ec: __vt__Q24Koga8Observer<Q24Koga14CharacterEvent,b>
    #0x804d1d3c: __RTTI__Q24Koga8Observer<Q24Koga14CharacterEvent,b>
    
    0x80364088: __vt__Q24Koga22CharacterEventObserver
    0x804d3f70: __RTTI__Q24Koga22CharacterEventObserver
    
    0x800ea1dc: receiveMessage__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea368: onEnteredFlashlightBeam__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea370: onCaptureBegin__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea378: onCaptureEnd__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea380: FUN_800ea380__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea388: onCollideWithPlayer__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    
    0x800ea390: onSprayedWithFire__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea398: onSprayedWithIce__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea3a0: onSprayedWithWater__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    
    0x800ea3a8: onHitWithFireBall__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea3d4: onHitWithIceBall__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea400: onHitWithWaterBall__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    
    0x800ea42c: onFishingBegin__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea434: onPlayerLeftRoom__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea43c: onPlayerEnteredRoom__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea444: onPlayerTapped__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    0x800ea44c: FUN_800ea44c__Q24Koga22CharacterEventObserverFPQ24Koga14CharacterEvent
    
    # SDK Symbols
    # Base
    0x801d9f7c: PPCMfmsr
    0x801d9f84: PPCMtmsr
    0x801d9f8c: PPCMfhid0
    0x801d9f94: PPCMfl2cr
    0x801d9f9c: PPCMtl2cr
    0x801d9fa4: PPCMtdec
    0x801d9fac: PPCSync
    0x801d9fb4: PPCHalt
    0x801d9fc8: PPCMfhid2
    0x801d9fd0: PPCMthid2
    0x801d9fd8: PPCMtwpar
    
    # OS
    # Before EXI
    0x801d9fe0: OSGetConsoleType
    0x801da008: OSInit
    0x801da2e4: OSExceptionInit
    0x801da564: __OSDBINTSTAR
    0x801da588: __OSDBJump
    0x801da58c: __OSSetExceptionHandler
    0x801da5a8: __OSGetExceptionHandler
    
    # OSExceptionVector
    0x801da5bc: __OSEVStar
    0x801da614: __DBVECTO
    0x801da624: __OSEVSetNumbe
    0x801da654: __OSEVEn
    
    0x801da658: OSDefaultExceptionHandler
    0x801da6ac: __OSPSInit
    0x801da6e4: __OSGetDIConfig
    0x801da6f8: OSInitAlarm
    0x801da744: OSCreateAlarm
    0x801da750: InsertAlarm
    0x801da9a0: OSSetAlarm
    0x801daa08: OSSetPeriodicAlarm
    0x801daa6c: OSCancelAlarm
    0x801dab88: DecrementerExceptionCallback
    0x801dad98: DecrementerExceptionHandler
    0x801dade4: OSAllocFromHeap
    0x801daee0: OSInitAlloc
    0x801daf50: OSGetArenaHi
    0x801daf60: OSGetArenaLo
    0x801daf60: OSSetArenaHi
    0x801daf68: OSSetArenaLo
    0x801daf70: __OSInitAudioSystem
    0x801db104: __OSStopAudioSystem
    0x801db1dc: DCEnable
    0x801db1f0: DCInvalidateRange
    0x801db220: DCFlushRange
    0x801db254: DCStoreRange
    0x801db288: DCFlushRangeNoSync
    0x801db2b8: DCZeroRange
    0x801db2e8: ICInvalidateRange
    0x801db320: ICFlashInvalidate
    0x801db330: ICEnable
    0x801db344: __LCEnable
    0x801db410: LCEnable
    0x801db448: LCDisable
    0x801db470: FUN_801db470 # Duplicate of LCStoreBlocks?
    0x801db494: LCStoreBlocks
    0x801db4b8: LCQueueWait
    0x801db4d0: L2GlobalInvalidate
    0x801db568: DMAErrorHandler
    0x801db6c8: __OSCacheInit
    0x801db7bc: __OSLoadFPUContext
    0x801db8e0: __OSSaveFPUContext
    0x801dba08: OSSetCurrentContext
    0x801dba64: OSGetCurrentContext
    0x801dba70: OSSaveContext
    0x801dbaf0: OSLoadContext
    0x801dbbc8: OSGetStackPointer
    0x801dbbd0: OSClearContext
    0x801dbbf4: OSInitContext
    0x801dbcb0: OSDumpContext
    0x801dbf58: OSSwitchFPUContext
    0x801dbfdc: __OSContextInit
    0x801dc024: OSFillFPUContext
    0x801dc150: OSReport
    0x801dc1d0: OSPanic
    0x801dc2fc: OSSetErrorHandler # ?
    0x801dc318: __OSUnhandledException
    
    # After EXI
    0x801ddab8: OSGetFontEncode
    0x801ddb10: OSDisableInterrupts
    0x801ddb24: OSEnableInterrupts
    0x801ddb38: OSRestoreInterrupts
    0x801ddb5c: __OSSetInterruptHandler
    0x801ddb78: __GetInterruptHandler
    0x801ddb8c: __OSInterruptInit
    0x801ddc00: SetInterruptMask
    0x801ddeb0: __OSMaskInterrupts
    0x801ddf38: __OSUnmaskInterrupts
    0x801ddfc0: __OSDispatchInterrupt
    0x801de2e4: ExternalInterruptHandler
    0x801de330: __OSModuleInit
    0x801de348: OSInitMessageQueue
    0x801de3a8: OSSendMessage
    0x801de470: OSReceiveMessage
    0x801de54c: OSInitMutex
    0x801de584: OSLockMutex
    0x801de660: OSUnlockMutex
    0x801de728: __OSUnlockAllMutex
    0x801de798: Run
    0x801de7d8: Callback_os
    0x801de7e4: __OSReboot
    0x801de994: OSRegisterResetFunction
    0x801dea18: Reset
    0x801dea88: __OSDoHotReset
    0x801dead0: OSResetSystem
    0x801dec88: __OSResetSWInterruptHandler
    0x801ded7c: OSGetResetButtonState
    0x801def70: WriteSramCallback
    0x801defd0: WriteSram
    0x801df0e8: __OSInitSram
    0x801df21c: __OSLockSram
    0x801df278: __OSLockSramEx
    0x801df2d4: UnlockSram
    0x801df5dc: __OSUnlockSram
    0x801df600: __OSUnlockSramEx
    0x801df624: __OSSyncSram
    0x801df634: OSGetSoundMode
    0x801df6b4: OSSetSoundMode
    0x801df758: OSGetProgressiveMode
    0x801df7d8: OSSetProgressiveMode
    
    # After SI
    0x801e01fc: __OSSystemCallVectorStar
    0x801e0218: __OSSystemCallVectorEn
    0x801e021c: __OSInitSystemCall
    0x801e0280: __OSThreadInit
    0x801e03a8: OSInitThreadQueue
    0x801e03b8: OSGetCurrentThread
    0x801e03c4: OSIsThreadTerminated
    0x801e03f8: OSDisableScheduler
    0x801e0438: OSEnableScheduler
    0x801e0478: UnsetRun
    0x801e04e0: __OSGetEffectivePriority
    0x801e051c: SetEffectivePriority
    0x801e06dc: __OSPromoteThread
    0x801e072c: SelectThread
    0x801e092c: __OSReschedule
    0x801e095c: OSCreateThread
    0x801e0a7c: OSExitThread
    0x801e0b60: OSCancelThread
    0x801e0d1c: OSDetachThread
    0x801e0dbc: OSResumeThread
    0x801e1044: OSSuspendThread
    0x801e11b4: OSSleepThread
    0x801e12a0: OSWakeupThread
    0x801e13a4: OSGetThreadPriority
    0x801e13ac: OSGetTime
    0x801e13c4: OSGetTick
    0x801e13cc: __OSGetSystemTime
    0x801e1430: GetDates
    0x801e15cc: OSTicksToCalendarTime
    
    # After EXI UART
    0x801e1a20: __init_user
    0x801e1a40: __init_cpp
    0x801e1a94: _ExitProcess
    
    # EXI
    0x801dc48c: SetExiInterruptMask
    0x801dc580: EXIImm
    0x801dc7dc: EXIImmEx
    0x801dc87c: EXIDma
    0x801dc968: EXISync
    0x801dcb70: EXIClearInterrupts
    0x801dcbb8: EXISetExiCallback
    0x801dcc34: __EXIProbe
    0x801ef56c: EXIProbe # Located inside CARD
    0x801dcd9c: EXIProbeEx
    0x801dcdfc: EXIAttach
    0x801dcee0: EXIDetach
    0x801dcf9c: EXISelect
    0x801dd0c8: EXIDeselect
    0x801dd1d8: EXIIntrruptHandler
    0x801dd258: TCIntrruptHandler
    0x801dd44c: EXTIntrruptHandler
    0x801dd4f8: EXIInit
    0x801dd5fc: EXILock
    0x801dd6f0: EXIUnlock
    0x801dd7cc: EXIGetState
    0x801dd7e4: EXIGetID
    
    # DB
    0x801e1ab4: DBInit
    0x801e1adc: __DBExceptionDestinationAux
    0x801e1b24: __DBExceptionDestination
    0x801e1b34: __DBIsExceptionMarked
    0x801e1b50: DBPrintf
    
    # EXI UART
    0x801e17d0: InitializeUART
    0x801e1818: ReadUARTN
    0x801e1820: WriteUARTN
    
    # SI
    0x801df87c: SIBusy
    0x801df89c: CompleteTransfer
    0x801dfae0: SIInterruptHandler
    0x801dfc6c: __SITransfer
    0x801dfe74: SIGetStatus
    0x801dfe84: SISetCommand
    0x801dfe98: SITransferCommands
    0x801dfea8: SISetXY
    0x801dff08: SIEnablePolling
    0x801dffa4: SIDisablePolling
    0x801e0010: SIGetResponse
    0x801e0034: AlarmHandler_si
    0x801e00c0: SITransfer
    
    # DVD
    0x801e2a08: __DVDInitWA
    0x801e2a48: __DVDInterruptHandler
    0x801e2d30: AlarmHandler_dvdlow
    0x801e2db4: AlarmHandlerForTimeout_dvdlow
    0x801e2e24: Read
    0x801e2f2c: SeekTwiceBeforeRead
    0x801e2fac: DVDLowRead
    0x801e3244: DVDLowSeek
    0x801e32cc: DVDLowWaitCoverClose
    0x801e32ec: DVDLowReadDiskID
    0x801e338c: DVDLowStopMotor
    0x801e3410: DVDLowRequestError
    0x801e3494: DVDLowInquiry
    0x801e3528: DVDLowAudioStream
    0x801e35b4: DVDLowRequestAudioStatus
    0x801e3634: DVDLowAudioBufferConfig
    0x801e36d0: DVDLowReset
    0x801e378c: DVDLowDoBreak
    0x801e3800: SetBreakAlarm
    0x801e3864: DVDLowBreak
    0x801e390c: DVDLowClearCallback
    0x801e3924: __DVDLowSetWAType
    0x801e3968: __DVDFSInit
    0x801e39a0: DVDConvertPathToEntrynum
    0x801e3c80: DVDOpen
    0x801e3d48: DVDClose
    0x801e3d6c: entryToPath
    0x801e3ecc: DVDGetCurrentDir
    0x801e3f90: DVDReadAsyncPrio
    0x801e4050: cbForReadAsync
    0x801e4080: DVDReadPrio
    0x801e4198: cbForReadSync
    0x801e41bc: DVDReadDir
    0x801e4260: DVDCloseDir
    0x801e4268: DVDPrepareStreamAsync
    0x801e4354: cbForPrepareStreamAsync
    0x801e4384: DVDInit
    0x801e4480: stateReadingFST
    0x801e44d4: cbForStateReadingFST
    0x801e4554: cbForStateError
    0x801e45fc: stateTimeout
    0x801e4698: stateGettingError
    0x801e46c0: CategorizeError
    0x801e4774: cbForStateGettingError
    0x801e4a08: cbForUnrecoveredError
    0x801e4a70: cbForUnrecoveredErrorRetry
    0x801e4b08: stateGoToRetry
    0x801e4b30: cbForStateGoToRetry
    0x801e4c88: stateCheckID
    0x801e4d6c: stateCheckID3
    0x801e4da0: stateCheckID2
    0x801e4dd8: cbForStateCheckID1
    0x801e4eec: cbForStateCheckID2
    0x801e4f90: cbForStateCheckID3
    0x801e508c: AlarmHandler_dvd
    0x801e50d0: stateCoverClosed
    0x801e519c: stateCoverClosed_CMD
    0x801e51cc: cbForStateCoverClosed
    0x801e523c: stateMotorStopped
    0x801e5264: cbForStateMotorStopped
    0x801e5348: stateReady
    0x801e5590: stateBusy
    0x801e5850: cbForStateBusy
    0x801e5e24: issueCommand
    0x801e5ee0: DVDReadAbsAsyncPrio
    0x801e5fbc: DVDReadAbsAsyncPrioForBS
    0x801e608c: DVDReadDiskID
    0x801e6160: DVDPrepareStreamAbsAync
    0x801e6224: DVDCancelStream
    0x801e62ec: DVDReset
    0x801e6330: DVDGetCommandBlockStatus
    0x801e637c: DVDGetDriveStatus
    0x801e6428: DVDCancelAsync
    0x801e6698: DVDCancel
    0x801e6744: cbForCancelSync
    0x801e6768: DVDGetCurrentDiskID
    0x801e6770: DVDCheckDisk
    0x801e6854: __DVDPrepareResetAsync
    0x801e6970: __DVDClearWaitingQueue
    0x801e69a8: __DVDPushWaitingQueue
    0x801e6a10: __DVDPopWaitingQueue
    0x801e6ab0: __DVDCheckWaitingQueue
    0x801e6b08: __DVDDequeueWaitingQueue
    0x801e6b68: __DVDStoreErrorCode
    0x801e6cc0: DVDCompareDiskID
    0x801e6d98: __fstLoad
    
    # VI
    0x801e6ee8: __VIRetraceHandler
    0x801e70f8: VISetPreRetraceCallback
    0x801e713c: getTiming
    0x801e71a4: __VIInit
    0x801e738c: VIInit
    0x801e77c0: VIWaitForRetrace
    0x801e7814: setFbbRegs
    0x801e7ae8: setVerticalRegs
    0x801e7c88: VIConfigure
    0x801e8338: VIFlush
    0x801e843c: VISetNextFrameBuffer
    0x801e84a8: VISetBlack
    0x801e8524: VIGetRetraceCount
    0x801e852c: getCurrentFieldEvenOdd
    0x801e85e8: VIGetNextField
    0x801e86dc: VIGetScanMode
    0x801e86e8: VIGetDTVStatus
    
    # PAD
    0x801e8724: ClampStick
    0x801e8854: PADClamp
    0x801e895c: DoReset
    0x801e8a30: PADProbeCallback
    0x801e8c0c: UpdateOrigin
    0x801e8da0: PADOriginCallback
    0x801e8ebc: PADOriginUpdateCallback
    0x801e8ef8: PADFixCallback
    0x801e914c: PADResetCallback
    0x801e987c: PADReset
    0x801e99e8: PADRecalibrate
    0x801e9b3c: PADInit
    0x801e9d00: PADReceiveCheckCallback
    0x801e9e5c: PADRead
    0x801ea194: PADSetSamplingRate
    0x801ea244: PADControlMotor
    0x801ea300: PADSetSpec
    0x801ea360: SPEC0_MakeStatus
    0x801ea4d4: SPEC1_MakeStatus
    0x801ea648: SPEC2_MakeStatus
    0x801eaa40: PADSetAnalogMode
    0x801eaab8: OnReset_pad
    
    # AI
    0x801eabd4: AIRegisterDMACallback
    0x801eac18: AIInitDMA
    0x801eaca0: AIStartDMA
    0x801eacb8: AIGetStreamSampleCount
    0x801eacc8: AIResetStreamSampleCount
    0x801eace0: AIGetStreamTrigger
    0x801eacf0: AISetStreamPlayState
    0x801eadc8: AIGetStreamPlayState
    0x801eadd8: AISetDSPSampleRate
    0x801eaeb8: AIGetDSPSampleRate
    0x801eaecc: AISetStreamSampleRate
    0x801eaef4: __AI_set_stream_sample_rate
    0x801eafc8: AIGetStreamSampleRate
    0x801eafd8: AISetStreamVolLeft
    0x801eaff4: AIGetStreamVolLeft
    0x801eb004: AISetStreamVolRight
    0x801eb020: AIGetStreamVolRight
    0x801eb030: AIInit
    0x801eb2a0: __AICallbackStackSwitch
    0x801eb2f8: __AI_SRC_INIT
    
    # AR
    0x801eb4dc: ARRegisterDMACallback
    0x801eb520: ARStartDMA
    0x801eb610: ARAlloc
    0x801eb678: ARInit
    0x801eb76c: ARGetBaseAddress
    0x801eb774: ARGetSize
    0x801eb77c: __ARHandler
    0x801eb7f4: __ARChecksize
    0x801ec6c0: __ARQServiceQueueLo
    0x801ec7c0: __ARQCallbackHack
    0x801ec7c4: __ARQInterruptServiceRoutine
    0x801ec890: ARQInit
    0x801ec8f8: ARQPostRequest
    
    # DSP
    0x801eca54: DSPCheckMailToDSP
    0x801eca64: DSPCheckMailFromDSP
    0x801eca74: DSPReadMailFromDSP
    0x801eca8c: DSPSendMailToDSP
    
    # CARD
    0x801ecaa0: __CARDDefaultApiCallback
    0x801ecaa4: __CARDSyncCallback
    0x801ecad8: __CARDExtHandler
    0x801ecba4: __CARDExiHandler
    0x801eccbc: __CARDTxHandler
    0x801ecd64: __CARDUnlockedHandler
    0x801ecde8: __CARDReadNintendoID
    0x801ecef4: __CARDEnableInterrupt
    0x801ecfb4: __CARDReadStatus
    0x801ed0a4: __CARDClearStatus
    0x801ed150: TimeoutHandler
    0x801ed1f4: Retry
    0x801ed420: UnlockedCallback
    0x801ed530: __CARDStart
    0x801ed6d0: __CARDReadSegment
    0x801ed808: __CARDWritePage
    0x801ed928: __CARDEraseSector
    0x801eda04: CARDInit
    0x801eda94: __CARDSetDiskID
    0x801edab0: __CARDGetControlBlock
    0x801edb60: __CARDPutControlBlock
    0x801edbb0: CARDFreeBlocks
    0x801edcd0: __CARDSync
    0x801edd68: OnReset_card
    0x8019eec0: bitrev
    0x8019ef40: ReadArrayUnlock
    
    0x801eddb8: BlockReadCallback
    0x801ede94: __CARDRead
    0x801edef8: BlockWriteCallback
    0x801edfd4: __CARDWrite
    0x801ee038: __CARDGetFatBlock
    0x801ee040: WriteCallback_fat
    0x801ee114: EraseCallback_fat
    0x801ee1dc: __CARDAllocBlock
    0x801ee2f4: __CARDUpdateFatBlock
    0x801ee3a0: __CARDGetDirBlock
    0x801ee3a8: WriteCallback_dir
    0x801ee478: EraseCallback_dir
    0x801ee540: __CARDUpdateDir
    0x801ee604: __CARDCheckSum
    0x801ee7b4: VerifyID
    0x801eea38: VerifyDir
    0x801eec78: VerifyFAT
    0x801eeefc: __CARDVerify
    0x801eef88: CARDCheckExAsync
    0x801ef518: CARDCheck
    0x801ef58c: CARDProbeEx
    0x801ef6f0: DoMount
    0x801efaa8: __CARDMountCallback
    0x801efbb0: CARDMountAsync
    0x801efd38: CARDMount
    0x801efd80: DoUnmount
    0x801efe1c: CARDUnmount
    0x801efec8: FormatCallback
    0x801f000c: __CARDFormatRegionAsync
    0x801f0664: CARDFormat
    0x801f06ac: __CARDCompareFileName
    0x801f0714: __CARDAccess
    0x801f07a0: __CARDIsPublic
    0x801f07d0: CARDOpen
    0x801f0944: CARDClose
    0x801f0998: CreateCallbackFat
    0x801f0ac8: CARDCreateAsync
    0x801f0ce0: CARDCreate
    0x801f0d28: __CARDSeek
    0x801f0ee0: ReadCallback
    0x801f1010: CARDReadAsync
    0x801f1154: CARDRead
    0x801f119c: WriteCallback_3
    0x801f130c: EraseCallback_3
    0x801f13bc: CARDWriteAsync
    0x801f14cc: CARDWrite
    0x801f1514: UpdateIconOffsets
    0x801f170c: CARDGetStatus
    0x801f1834: CARDSetStatusAsync
    0x801f19a4: CARDSetStatus
    
    